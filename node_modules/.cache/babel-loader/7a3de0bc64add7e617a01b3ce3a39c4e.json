{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/michaelrodriguez/hello_world/src/components/Nytimes.jsx\";\nimport React, { Component } from \"react\";\nimport p5 from \"p5\";\n\nclass Sketch extends React.Component {\n  constructor(props) {\n    super(props); // this calls the base class constructor\n\n    this.state = {\n      count: '0'\n    };\n\n    this.Sketch = p => {\n      // Global Variables ////////////////////////////////////////////////////////////////////////\n      let queue = [];\n      let keywords = [];\n      let apiKey = \"api-key=QAxdBlc0xuqLooRSPDBfuLaec4GwdRhU\"; // move .env once done\n\n      let myFont;\n      let currHeadline;\n      let i = 0;\n      let k = 0;\n      let q = 0;\n      let button;\n      let bottomBuffer;\n      let topBuffer;\n      let strings;\n      let results, line;\n      let mark;\n      let mickey; // Images /////////////////////////////////////////////////////////////////////////////\n\n      let markImg = {\n        img: mark,\n        x: p.windowWidth / 1.25,\n        y: 150,\n        width: p.windowWidth / 8,\n        height: p.windowHeight / 4\n      };\n      let mickeyImg = {\n        img: mickey,\n        x: p.windowWidth / 30,\n        y: 0,\n        width: 250,\n        height: 250\n      }; // API Results/////////////////////////////////////////////////////////////////////////////\n\n      let facebookRes = {\n        x: p.windowWidth / 2,\n        y: p.windowHeight / 10,\n        title: \"The most shared articles on Facebook are\",\n        apiUrl: \"https://api.nytimes.com/svc/mostpopular/v2/shared/1/facebook.json?\" + apiKey,\n        img: \"mark.png\",\n        tinted: false,\n        results: [],\n        flag: false,\n        queue: []\n      };\n      let emailRes = {\n        x: p.windowWidth / 7,\n        y: p.windowHeight / 10,\n        title: \"The most emailed articles are\",\n        apiUrl: \"https://api.nytimes.com/svc/mostpopular/v2/emailed/1.json?\" + apiKey,\n        img: \"mickey.png\",\n        tinted: false,\n        results: [],\n        flag: false,\n        queue: []\n      }; //  Headline Object/////////////////////////////////////////////////////////////////////////////\n\n      let KeywordObj = {\n        x: '',\n        y: '',\n        text: ''\n      };\n\n      p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight / 1.6);\n        p.fill(255);\n        p.textSize(60);\n        p.text(\"<-- EMAILS\", emailRes.x + 90, emailRes.y - 30);\n        p.text(\" FACEBOOK --> \", facebookRes.x + 200, emailRes.y + 400);\n        bottomBuffer = p.createGraphics(p.windowWidth / 2, p.windowHeight / 10);\n        topBuffer = p.createGraphics(p.windowWidth / 5, p.windowHeight / 4);\n      };\n\n      p.preload = () => {\n        // Preloading the section with question & buttons\n        mickey = p.loadImage(emailRes.img);\n        mark = p.loadImage(facebookRes.img);\n        myFont = p.loadFont('Chomsky.otf'); // API CALLS -> Response -> JSON -> Success -> Extract Data  Fail -> Console.log Err\n\n        fetch(emailRes.apiUrl).then(response => response.json()).then(emailJSONtoData).catch(err => console.log('error'));\n        fetch(facebookRes.apiUrl).then(response => response.json()).then(fbJSONtoData).catch(err => console.log('error communicating with api'));\n      };\n\n      p.draw = () => {\n        drawKeywords();\n        p.image(mickey, mickeyImg.x, mickeyImg.y, mickeyImg.width, mickeyImg.height);\n        p.image(mark, markImg.x, markImg.y, markImg.width, markImg.height);\n        overImage();\n      }; // Functions ///////////////////////////////////////////////////////////////////////////\n\n\n      function drawKeywords() {\n        const bb = p.image(bottomBuffer, p.width / 4, p.height / 3);\n        p.textSize(12); // p.text('Query through the keywords by the click of a mouse',p.width/2.5,p.height/2.9)\n\n        bottomBuffer.textFont(myFont);\n        bottomBuffer.background(0);\n        bottomBuffer.fill(255);\n        bottomBuffer.textSize(bottomBuffer.width / 17);\n        button = p.createButton('Keywords');\n        button.mousePressed(() => q++);\n        bottomBuffer.textFont(myFont);\n\n        if (q < 90) {\n          bottomBuffer.background(0); //location of text\n\n          currHeadline = bottomBuffer.text(keywords[q], bottomBuffer.width / 12, bottomBuffer.height / 1.5);\n          button.position(p.width / 2.2, p.height / 2.1);\n        } else {\n          q = 1;\n        }\n      } // Converting JSON -> Pushing it to each array\n\n\n      function emailJSONtoData(data) {\n        emailRes.results = data.results;\n        getKeywords();\n      }\n\n      function fbJSONtoData(data) {\n        facebookRes.results = data.results;\n      } // If image is hovered over load the results, tint image, and remove keyword instance -> Then print the other results after 2.5 secs.\n\n\n      function overImage() {\n        p.textFont();\n        let overMickey = p.mouseX > 0 && p.mouseX < p.width / 6 && p.mouseY > 0 && p.mouseY < p.windowHeight / 3.3;\n        let overMark = p.mouseX > p.width / 1.1 && p.mouseY > p.height / 3 && p.mouseY < p.height;\n\n        if (overMickey) {\n          emailRes.flag = true;\n          loadEmailResults();\n          tintOtherImg();\n          p.removeElements(); // bb.hide();\n\n          setTimeout(printAQueue, 2500);\n          p.removeElements();\n          p.image(mark, markImg.x, markImg.y, markImg.width, markImg.height);\n        }\n\n        if (overMark) {\n          facebookRes.flag = true;\n          loadFbResults();\n          tintOtherImg();\n          p.redraw();\n          setTimeout(printAQueue, 2500);\n          p.image(mickey, mickeyImg.x, mickeyImg.y, mickeyImg.width, mickeyImg.height);\n        }\n      }\n\n      function loadFbResults() {\n        getHeadlines();\n        printQueue();\n        p.noLoop();\n      }\n\n      function loadEmailResults() {\n        getHeadlines();\n        printQueue();\n        p.noLoop();\n      } // Boolean logic to stream data results from the two api queries\n\n\n      function gotData(data) {\n        if (facebookRes.flag) {\n          facebookRes.results = data.results;\n        }\n\n        if (emailRes.flag) {\n          emailRes.results = data.results;\n        }\n\n        getHeadlines();\n        printQueue();\n      } // Pushings results to its respectively array\n\n\n      function getHeadlines() {\n        for (let i = 0; i < 10; i++) {\n          emailRes.queue[i] = emailRes.results[i].title;\n          facebookRes.queue[i] = facebookRes.results[i].title;\n        }\n      } // Printing Animation : Create Space Between Headlines, and style text if even/odd.\n\n\n      function printQueue() {\n        p.fill(255);\n        p.textSize(30);\n        p.textSize(15);\n\n        if (i < 10) {\n          if (emailRes.flag) {\n            emailRes.y = emailRes.y + 25;\n          }\n\n          if (facebookRes.flag) {\n            facebookRes.y = facebookRes.y + 25;\n          }\n\n          if (i % 2 === 0 || i === 0) {\n            p.fill(245, 100, 104);\n          } else {\n            p.fill(255);\n          }\n\n          if (emailRes.flag) {\n            line = p.text(i + 1 + \". \" + emailRes.queue[i], emailRes.x, emailRes.y);\n          }\n\n          if (facebookRes.flag) {\n            p.text(i + 1 + \". \" + facebookRes.queue[i], facebookRes.x, facebookRes.y);\n          }\n\n          ++i;\n        }\n\n        let interval = setTimeout(printQueue, 100);\n      } // Printing Animation for the data that wasn't initially loaded. * * Refactor so its DRY?\n\n\n      function printAQueue() {\n        p.fill(255);\n        p.textSize(30);\n        p.textSize(15);\n\n        if (k < 10) {\n          facebookRes.y = facebookRes.y + 25;\n          emailRes.y = emailRes.y + 25;\n\n          if (k % 2 === 0 || k === 0) {\n            p.fill(245, 100, 104);\n          } else {\n            p.fill(255);\n          }\n\n          if (emailRes.flag) {\n            p.text(k + 1 + \". \" + facebookRes.queue[k], facebookRes.x, facebookRes.y);\n            p.redraw();\n            p.noTint();\n            p.image(mark, markImg.x, markImg.y, markImg.width, markImg.height);\n          }\n\n          if (facebookRes.flag) {\n            line = p.text(k + 1 + \". \" + emailRes.queue[k], emailRes.x, emailRes.y);\n            p.redraw();\n            p.noTint();\n            p.image(mickey, mickeyImg.x, mickeyImg.y, mickeyImg.width, mickeyImg.height);\n          }\n\n          ++k;\n        }\n\n        let intervalA = setTimeout(printAQueue, 100);\n      }\n\n      function tintOtherImg() {\n        p.tint(0, 0, 0, 180);\n      } // Iterating through each article, and inside the nested array & pushing it into keywords arr\n\n\n      function getKeywords() {\n        for (let i = 0; i < emailRes.results.length; i++) {\n          strings = emailRes.results[i].des_facet;\n\n          for (let j = 0; j < emailRes.results.length; j++) {\n            if (emailRes.results[i].des_facet[j]) {\n              keywords.push(emailRes.results[i].des_facet[j]);\n            }\n          }\n        }\n      }\n    };\n\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      message: 'Welcome',\n      ingredients: []\n    };\n  }\n\n  // Mounting p5 as an instance.\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.myRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"App-title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JSON.stringify(this.props.myObj)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this);\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count == 0 ? 'Zero' : count;\n  }\n\n} // <ul>\n//\n//          {this.state.ingredients.map(\n//            (value ,index) => <li> { '# '}{ value }</li>)}\n//          </ul>\n\n\nexport default Sketch;","map":{"version":3,"sources":["/Users/michaelrodriguez/hello_world/src/components/Nytimes.jsx"],"names":["React","Component","p5","Sketch","constructor","props","state","count","p","queue","keywords","apiKey","myFont","currHeadline","i","k","q","button","bottomBuffer","topBuffer","strings","results","line","mark","mickey","markImg","img","x","windowWidth","y","width","height","windowHeight","mickeyImg","facebookRes","title","apiUrl","tinted","flag","emailRes","KeywordObj","text","setup","createCanvas","fill","textSize","createGraphics","preload","loadImage","loadFont","fetch","then","response","json","emailJSONtoData","catch","err","console","log","fbJSONtoData","draw","drawKeywords","image","overImage","bb","textFont","background","createButton","mousePressed","position","data","getKeywords","overMickey","mouseX","mouseY","overMark","loadEmailResults","tintOtherImg","removeElements","setTimeout","printAQueue","loadFbResults","redraw","getHeadlines","printQueue","noLoop","gotData","interval","noTint","intervalA","tint","length","des_facet","j","push","myRef","createRef","message","ingredients","componentDidMount","myP5","current","render","formatCount","JSON","stringify","myObj"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport p5 from \"p5\";\n\nclass Sketch extends React.Component {\n  state = {\n    count: '0'\n  }\n  constructor(props) {\n    super(props); // this calls the base class constructor\n    this.myRef = React.createRef();\n    this.state = {\n      message: 'Welcome',\n      ingredients: []\n    }\n  }\n  Sketch = (p) => {\n    // Global Variables ////////////////////////////////////////////////////////////////////////\n    let queue = [];\n    let keywords = [];\n    let apiKey = \"api-key=QAxdBlc0xuqLooRSPDBfuLaec4GwdRhU\"; // move .env once done\n    let myFont;\n    let currHeadline;\n    let i = 0;\n    let k = 0;\n    let q = 0;\n    let button;\n    let bottomBuffer;\n    let topBuffer;\n    let strings;\n    let results,\n      line;\n    let mark;\n    let mickey;\n    // Images /////////////////////////////////////////////////////////////////////////////\n    let markImg = {\n      img: mark,\n      x: p.windowWidth/1.25,\n      y: 150,\n      width: p.windowWidth/8,\n      height: p.windowHeight/4\n    };\n    let mickeyImg = {\n      img: mickey,\n      x: p.windowWidth/30,\n      y: 0,\n      width: 250,\n      height: 250\n    };\n    // API Results/////////////////////////////////////////////////////////////////////////////\n    let facebookRes = {\n      x: p.windowWidth / 2,\n      y: p.windowHeight / 10,\n      title: \"The most shared articles on Facebook are\",\n      apiUrl: \"https://api.nytimes.com/svc/mostpopular/v2/shared/1/facebook.json?\" + apiKey,\n      img: \"mark.png\",\n      tinted: false,\n      results: [],\n      flag: false,\n      queue: []\n    };\n\n    let emailRes = {\n      x: p.windowWidth / 7,\n      y: p.windowHeight / 10,\n      title: \"The most emailed articles are\",\n      apiUrl: \"https://api.nytimes.com/svc/mostpopular/v2/emailed/1.json?\" + apiKey,\n      img: \"mickey.png\",\n      tinted: false,\n      results: [],\n      flag: false,\n      queue: []\n    };\n    //  Headline Object/////////////////////////////////////////////////////////////////////////////\n    let KeywordObj = {\n      x: '',\n      y: '',\n      text: ''\n    };\n\n    p.setup = () => {\n      p.createCanvas(p.windowWidth, p.windowHeight / 1.6);\n      p.fill(255)\n      p.textSize(60)\n      p.text(\"<-- EMAILS\", emailRes.x + 90, emailRes.y - 30)\n      p.text(\" FACEBOOK --> \", facebookRes.x + 200, emailRes.y + 400)\n      bottomBuffer = p.createGraphics(p.windowWidth / 2, p.windowHeight / 10);\n      topBuffer = p.createGraphics(p.windowWidth / 5, p.windowHeight / 4);\n    };\n    p.preload = () => {\n      // Preloading the section with question & buttons\n      mickey = p.loadImage(emailRes.img);\n      mark = p.loadImage(facebookRes.img);\n      myFont = p.loadFont('Chomsky.otf');\n      // API CALLS -> Response -> JSON -> Success -> Extract Data  Fail -> Console.log Err\n      fetch(emailRes.apiUrl).then(response => response.json()).then(emailJSONtoData).catch(err => console.log('error'));\n      fetch(facebookRes.apiUrl).then(response => response.json()).then(fbJSONtoData).catch(err => console.log('error communicating with api'));\n    };\n    p.draw = () => {\n      drawKeywords();\n      p.image(mickey, mickeyImg.x, mickeyImg.y, mickeyImg.width, mickeyImg.height);\n      p.image(mark, markImg.x, markImg.y, markImg.width, markImg.height);\n      overImage();\n\n    };\n    // Functions ///////////////////////////////////////////////////////////////////////////\n\n    function drawKeywords() {\n      const bb = p.image(bottomBuffer, p.width / 4, p.height / 3);\n      p.textSize(12)\n      // p.text('Query through the keywords by the click of a mouse',p.width/2.5,p.height/2.9)\n      bottomBuffer.textFont(myFont);\n      bottomBuffer.background(0);\n      bottomBuffer.fill(255);\n      bottomBuffer.textSize(bottomBuffer.width / 17);\n      button = p.createButton('Keywords');\n      button.mousePressed(() => q++);\n      bottomBuffer.textFont(myFont)\n      if (q < 90) {\n        bottomBuffer.background(0);\n        //location of text\n        currHeadline = bottomBuffer.text(keywords[q], bottomBuffer.width / 12, bottomBuffer.height / 1.5);\n        button.position(p.width / 2.2, p.height / 2.1)\n      } else {\n        q = 1;\n      }\n    }\n    // Converting JSON -> Pushing it to each array\n    function emailJSONtoData(data) {\n      emailRes.results = data.results;\n      getKeywords();\n    }\n    function fbJSONtoData(data) {\n      facebookRes.results = data.results;\n    }\n\n    // If image is hovered over load the results, tint image, and remove keyword instance -> Then print the other results after 2.5 secs.\n    function overImage() {\n      p.textFont();\n      let overMickey = p.mouseX > 0 && p.mouseX < p.width / 6 && p.mouseY > 0 && p.mouseY < p.windowHeight / 3.3;\n      let overMark = p.mouseX > p.width / 1.1 && p.mouseY > p.height / 3 && p.mouseY < p.height;\n      if (overMickey) {\n        emailRes.flag = true;\n        loadEmailResults();\n        tintOtherImg();\n        p.removeElements();\n        // bb.hide();\n        setTimeout(printAQueue, 2500);\n        p.removeElements();\n        p.image(mark, markImg.x, markImg.y, markImg.width, markImg.height);\n\n      }\n      if (overMark) {\n        facebookRes.flag = true;\n        loadFbResults();\n        tintOtherImg();\n        p.redraw();\n        setTimeout(printAQueue, 2500);\n        p.image(mickey, mickeyImg.x, mickeyImg.y, mickeyImg.width, mickeyImg.height);\n\n      }\n    }\n\n    function loadFbResults() {\n      getHeadlines();\n      printQueue();\n      p.noLoop();\n    }\n    function loadEmailResults() {\n      getHeadlines();\n      printQueue();\n      p.noLoop();\n\n    }\n    // Boolean logic to stream data results from the two api queries\n    function gotData(data) {\n      if (facebookRes.flag) {\n        facebookRes.results = data.results;\n      }\n      if (emailRes.flag) {\n        emailRes.results = data.results;\n      }\n      getHeadlines();\n      printQueue();\n    }\n   // Pushings results to its respectively array\n    function getHeadlines() {\n      for (let i = 0; i < 10; i++) {\n        emailRes.queue[i] = emailRes.results[i].title;\n        facebookRes.queue[i] = facebookRes.results[i].title;\n      }\n    }\n    // Printing Animation : Create Space Between Headlines, and style text if even/odd.\n    function printQueue() {\n      p.fill(255);\n      p.textSize(30);\n      p.textSize(15);\n      if (i < 10) {\n        if (emailRes.flag) {\n          emailRes.y = emailRes.y + 25;\n        }\n        if (facebookRes.flag) {\n          facebookRes.y = facebookRes.y + 25;\n        }\n        if (i % 2 === 0 || i === 0) {\n          p.fill(245, 100, 104);\n        } else {\n          p.fill(255);\n        }\n        if (emailRes.flag) {\n          line = p.text((i + 1) + \". \" + emailRes.queue[i], emailRes.x, emailRes.y);\n        }\n        if (facebookRes.flag) {\n          p.text((i + 1) + \". \" + facebookRes.queue[i], facebookRes.x, facebookRes.y);\n        }\n        ++i;\n      }\n      let interval = setTimeout(printQueue, 100);\n    }\n// Printing Animation for the data that wasn't initially loaded. * * Refactor so its DRY?\n    function printAQueue() {\n      p.fill(255);\n      p.textSize(30);\n      p.textSize(15);\n      if (k < 10) {\n        facebookRes.y = facebookRes.y + 25;\n        emailRes.y = emailRes.y + 25;\n        if (k % 2 === 0 || k === 0) {\n          p.fill(245, 100, 104);\n        } else {\n          p.fill(255);\n        }\n        if (emailRes.flag) {\n          p.text((k + 1) + \". \" + facebookRes.queue[k], facebookRes.x, facebookRes.y);\n          p.redraw();\n          p.noTint();\n          p.image(mark, markImg.x, markImg.y, markImg.width, markImg.height);\n        }\n        if (facebookRes.flag) {\n          line = p.text((k + 1) + \". \" + emailRes.queue[k], emailRes.x, emailRes.y);\n          p.redraw();\n          p.noTint();\n          p.image(mickey, mickeyImg.x, mickeyImg.y, mickeyImg.width, mickeyImg.height);\n        }\n        ++k;\n      }\n      let intervalA = setTimeout(printAQueue, 100);\n    }\n    function tintOtherImg() {\n      p.tint(0, 0, 0, 180);\n    }\n\n  // Iterating through each article, and inside the nested array & pushing it into keywords arr\n    function getKeywords() {\n      for (let i = 0; i < emailRes.results.length; i++) {\n        strings = emailRes.results[i].des_facet;\n        for (let j = 0; j < emailRes.results.length; j++) {\n          if (emailRes.results[i].des_facet[j]) {\n            keywords.push(emailRes.results[i].des_facet[j]);\n          }\n        }\n      }\n    }\n  };\n// Mounting p5 as an instance.\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n  }\n\n  render() {\n    return (<div ref={this.myRef}>\n      <h1 className=\"App-title\">{this.props.title}</h1>\n      <h1>{this.formatCount()}</h1>\n      <div>{JSON.stringify(this.props.myObj)}</div>\n\n    </div>);\n  }\n  formatCount() {\n    const {count} = this.state;\n    return count == 0\n      ? 'Zero'\n      : count;\n  }\n}\n\n// <ul>\n//\n//          {this.state.ingredients.map(\n//            (value ,index) => <li> { '# '}{ value }</li>)}\n//          </ul>\n\nexport default Sketch;\n"]},"metadata":{},"sourceType":"module"}